AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template deploys all components to support the application, with the
  exception of those related to BIG-IP.  An autoscaling group for the
  application is created. Disclaimer: More realistic application template would
  take AMI ID as input, with AMI ID being be artifact of a build pipe line.
Metadata:
  Version: 1.0.0
Parameters:
  application:
    Description: Service Name Short- used for creating objects. ex. service1
    Type: String
    MaxLength: 50
    Default: f5demoapp
  owner:
    Type: String
    MaxLength: 50
    Default: Owner
  group:
    Type: String
    MaxLength: 50
    Default: Group
  environment:
    Type: String
    MaxLength: 50
    Default: Environment
  costcenter:
    Default: f5costcenter
    Description: Name of the Cost Center Tag
    Type: String
  appDockerImageName:
    Description: Application docker image name
    Type: String
  scalingMaxSize:
    ConstraintDescription: Must be a number between 2-8
    Default: 3
    Description: >-
      Maximum number of BIG-IP instances (2-8) that can be created in the Auto
      Scale Group
    MaxValue: 8
    MinValue: 2
    Type: Number
  scalingMinSize:
    ConstraintDescription: Must be a number between 1-8
    Default: 1
    Description: >-
      Minimum number of BIG-IP instances (1-8) you want available in the Auto
      Scale Group
    MaxValue: 8
    MinValue: 1
    Type: Number
  vpc:
    Description: Common VPC for whole deployment
    Type: 'AWS::EC2::VPC::Id'
  applicationSubnets:
    Description: Application Subnet IDs
    Type: 'List<AWS::EC2::Subnet::Id>'
  instanceType:
    AllowedValues:
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type
    Default: t2.small
    Description: App EC2 instance type
    Type: String
  sshKey:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
  restrictedSrcAddress:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  setAppPublicIP:
    Description: To create a Public IP and connect it to the application
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Type: String
  containerName:
    Description: Container Name
    Type: String
    Default: 'f5devcentral/f5-demo-app:latest'
  appSecurityGroupID:
    Default: OPTIONAL
    Description: The resource ID of a security group to apply to the application.
    Type: String
Mappings:
  imageRegionMap:
    us-east-2:
      AMI: ami-0a75b786d9a7f8144
    us-east-1:
      AMI: ami-06cf02a98a61f9f5e
    us-west-1:
      AMI: ami-02676464a065c9c05
    us-west-2:
      AMI: ami-0a248ce88bcc7bd23
    af-south-1:
      AMI: ami-03bfd033c9d776adc
    ap-east-1:
      AMI: ami-09a8f7cf3b1b73e57
    ap-south-1:
      AMI: ami-0dd861ee19fd50a16
    ap-northeast-1:
      AMI: ami-0d09d267328197c99
    ap-northeast-2:
      AMI: ami-0cf8e67d10c823f2e
    ap-southeast-1:
      AMI: ami-056251cdd6fd1c8eb
    ap-southeast-2:
      AMI: ami-05f50d9ec7e4c3b02
    ca-central-1:
      AMI: ami-0252eebc56636a56b
    eu-central-1:
      AMI: ami-095e1a4d3d632d215
    eu-west-1:
      AMI: ami-0d4002a13019b7703
    eu-west-2:
      AMI: ami-0aa3620fadad9198e
    eu-west-3:
      AMI: ami-04552009264cbe9f4
    eu-south-1:
      AMI: ami-0a84267606bcea16b
    eu-north-1:
      AMI: ami-026f0eb2e8006617d
    me-south-1:
      AMI: ami-0c49e56e4c204cc4c
    sa-east-1:
      AMI: ami-0c52a0227804a4318
Resources:
  appLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Init':
        config:
          commands:
            010-install-libs:
              command: !Join
                - ''
                - - yum update -y;
                  - yum install -y epel-release;
                  - >-
                    yum install -y
                    https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.amzn1.noarch.rpm;
                  - >-
                    ln -s /usr/local/lib/python2.7/site-packages/cfnbootstrap
                    /usr/lib/python2.7/site-packages/cfnbootstrap;
    Properties:
      ImageId: !FindInMap
        - imageRegionMap
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: !Ref instanceType
      AssociatePublicIpAddress: !Ref setAppPublicIP
      KeyName: !Ref sshKey
      SecurityGroups:
        - !Ref appSecurityGroupID
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              yum -y install docker
            - |
              service docker start
            - 'docker run --name f5demo -p 80:80 -p 443:443 -d '
            - !Ref appDockerImageName
            - |+

  appAutoscaleGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      Tags:
        - Key: Name
          PropagateAtLaunch: 'true'
          Value: !Join
            - ''
            - - 'Application Instance: '
              - !Ref 'AWS::StackName'
        - Key: Application
          PropagateAtLaunch: 'true'
          Value: !Ref application
        - Key: Costcenter
          PropagateAtLaunch: 'true'
          Value: !Ref costcenter
        - Key: Environment
          PropagateAtLaunch: 'true'
          Value: !Ref environment
        - Key: Group
          PropagateAtLaunch: 'true'
          Value: !Ref group
        - Key: Owner
          PropagateAtLaunch: 'true'
          Value: !Ref owner
        - Key: POC
          PropagateAtLaunch: 'true'
          Value: F5APP
      VPCZoneIdentifier: !Ref applicationSubnets
      Cooldown: '600'
      HealthCheckGracePeriod: 120
      LaunchConfigurationName: !Ref appLaunchConfig
      MaxSize: !Ref scalingMaxSize
      MinSize: !Ref scalingMinSize
      MetricsCollection:
        - Granularity: 1Minute
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '1'
        PauseTime: PT3M
Outputs:
  StackName:
    Description: application nested stack name
    Value: !Ref "AWS::StackName"
  appAutoscaleGroupName:
    Value: !Ref appAutoscaleGroup
